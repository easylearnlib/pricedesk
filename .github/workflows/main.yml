name: Build and update to GitHub Pages

on:
  schedule:
    - cron: '0 10,18 * * *'
  push:
    branches:
      - main

jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install pre-commit
        run: pip install pre-commit

      - name: Install Poetry
        run: pip install poetry

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Cache frontend data
        uses: actions/cache@v3
        id: cache
        with:
          path: frontend/src/lib/data
          key: ${{ hashFiles('data/*.csv', 'app/*.py', 'pyproject.toml', 'poetry.lock') }}

      - name: Install dependencies
        run: poetry install

      - name: Download latest data
        run: poetry run download

      - name: Commit latest data files if updated
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          git config --global user.name "GitHub"
          git config --global user.email "<noreply@github.com>"
          cp -ar data /tmp
          for i in 1 2 3 4 5; do
            git fetch --all
            git reset --hard origin/main
            cp -rf /tmp/data/* data/
            git add data
            pre-commit run || true
            if [[ $(git status --porcelain) ]]; then
              git commit -m "Automatic update of data files"
              if git push -q "https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git" main; then
                echo "Push succeeded."
                break
              else
                echo "Push failed, retrying..."
                sleep 5
              fi
            else
              echo "No updates to data"
              exit 0
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate data
        run: poetry run generate

      - name: Build frontend
        run: |
          cd frontend
          pnpm install --no-frozen-lockfile
          pnpm run build

      - name: Deploy to GitHub Pages
        if: success()
        run: |
          git config --global user.name "GitHub"
          git config --global user.email "<noreply@github.com>"
          SRC="$(pwd)"
          mkdir /tmp/github-pages && cd /tmp/github-pages
          git init . && git checkout --orphan "${BRANCH}"
          cp -r "${SRC}/${DEPLOY_DIR}"/* .
          [[ ! -z "${FQDN}" ]] && echo "${FQDN}" > CNAME
          touch .nojekyll
          git add . && git status && git commit --message "${MESSAGE}"
          git push -f -q "https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git" "${BRANCH}"
        env:
          DEPLOY_DIR: frontend/build
          MESSAGE: Deploy to GitHub Pages
          BRANCH: gh-pages
          FQDN: https://market.smartchance.org
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
